<?xml version="1.0" encoding="UTF-8"?>
<!--配置文件优先级，从高到低-->
<!--log4j.configurationFile,log4j2-test.properties,log4j2-test.yaml,
log4j2-test.yml,log4j2-test.json,log4j2-test.jsn,log4j2-test.xml,log4j2.properties,
log4j2.yaml,log4j2.yml,log4j2.json,log4j2.jsn,log4j2.xml-->
<!--monitorInterval:指定间隔监控配置文件是否更改，更改后自动重新配置，不需要重启服务。-->
<configuration name="logs" status="info" monitorInterval="300" strict="false">

    <properties>
        <property name="catalina.home">${sys:catalina.home}/logs</property>
    </properties>

    <appenders>
        <!--打印日志到控制台-->
        <Console name="stdout" target="SYSTEM_OUT">
            <!--<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <PatternLayout pattern="%d %c{1.}-%p %class{36}-%M() [%t:%L] %m%n"/>
        </Console>

        <!--将info级别的信息追加到info.log日志文件-->
        <RollingFile name="infoLog"
                     fileName="${catalina.home}/info.log"
                     append="true"
                     filePattern="${catalina.home}/info_%d{yyyy-MM-dd}.log.zip">
            <PatternLayout
                    pattern="%d %c{1.}-%p %class{36}-%M() [%t:%L] %m%n"/>
            <!--过滤器，只展示info，不展示error-->
            <!--<Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
            <!--删除以info_*.log.zip结尾，超过2小时的日志文件-->
            <DefaultRolloverStrategy max="10">
                <Delete basePath="${catalina.home}" maxDepth="1">
                    <IfFileName glob="info_*.log.zip"></IfFileName>
                    <!--S/m/d 秒/分/天-->
                    <IfLastModified age="7d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--将error级别的信息追加到error.log日志文件-->
        <!--filePath：${catalina.home}/app-%d{yyyy-MM}.log 按月生成日志-->
        <!--filePath：${catalina.home}/app-%d{yyyy-MM-dd-HH-mm}.log 按分钟生成日志-->
        <RollingFile name="errorLog"
                     fileName="${catalina.home}/error.log"
                     append="true"
                     filePattern="${catalina.home}/error_%d{yyyy-MM-dd}_%i.log.zip">
            <PatternLayout
                    pattern="%d %c{1.}-%p %class{36}-%M() [%t:%L] %m%n"/>
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <!--多少时间生成一个日志文件，1天,modulate="true"：以0点为边界-->
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
                <!--设置单个日志文件的大小上限,使用它一般会在文件中filePattern采用%i模式-->
                <SizeBasedTriggeringPolicy size="10 MB" />
            </Policies>
            <!--DefaultRolloverStrategy:
               设置符合同个filePath的日志文件的最大数量
               新产生的日志文件会覆盖旧的日志文件
            -->
            <!--删除以error_*.log.zip结尾，超过5天的日志文件-->
            <DefaultRolloverStrategy max="10">
                <Delete basePath="${catalina.home}" maxDepth="1">
                    <IfFileName glob="error_*.log.zip"></IfFileName>
                    <!--S/m/d 秒/分/天-->
                    <IfLastModified age="7d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--将特定的信息追加到customLog.log日志文件-->
        <RollingFile name="customLog"
                     fileName="${catalina.home}/custom.log"
                     append="true"
                     filePattern="${catalina.home}/custom_%d{yyyy-MM-dd-HH}-00.log.zip">
            <PatternLayout pattern="%d %c{1.}-%p %class{36}-%M() [%t:%L] %m%n"/>
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>
            </Policies>
            <!--删除以self_*.zip结尾，超过1小时的日志文件-->
            <DefaultRolloverStrategy max="7">
                <Delete basePath="${catalina.home}" maxDepth="1">
                    <IfFileName glob="custom_*.log.zip"></IfFileName>
                    <!--S/m/d 秒/分/天-->
                    <IfLastModified age="1h" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

        <!--异步写入日志-->
        <Async name="AsyncLog">
            <AppenderRef ref="customLog"/>
        </Async>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效
      <logger>标签可以在<Root>标签中引用（全局使用）也可以在类调用时指定引用的名称，定向调用
      如：private static final Logger LOGGER_MAIL= LoggerFactory.getLogger("selfLogger");
      LOGGER_MAIL的日志都只会发送邮件，不写到文件中
    -->
    <loggers>
        <Logger name="customLogger" level="info" additivity="true">
            <AppenderRef ref="customLog"/>
        </Logger>

        <logger name="consoleLogger" level="debug" additivity="false">
            <AppenderRef ref="stdout"/>
        </logger>

        <!--异步数据库记录，没有类名和方法名-->
        <!--异步日志记录，没有类名和方法名,includeLocation="true":让Root日志记录显示类名和方法，效率降低30倍左右
            additivity="false",不执行root里面的日志记录
        -->
        <AsyncLogger name="AsyncSelfLogger" level="info">
            <AppenderRef ref="AsyncLog"/>
        </AsyncLogger>

        <!--Root日志记录器-->
        <Root level="info">
            <AppenderRef ref="stdout"/>
            <AppenderRef ref="errorLog"/>
            <AppenderRef ref="infoLog"/>
        </Root>
    </loggers>

</configuration>